git: its keeps track of the entire history of things that you are working on your computer
[version control]

collboration: 
advanced and sophisticated tools for collaboration.
doesnt has any problem for 2 people working on the same document at the same time.

This is a system to keep track of history of the project as well as many people to collaborate on the project.
together.

Git vs Github:
Git is the actual version control software.
actual application invented by the guy who invented Linux.
countless examples of version control systems.

Github is a website or webservice where you can sign up and have an account.
=> do git things on a server or a website.
=> github kinds of runs the git software behind the scenes.
=> social coding 
=> social network for projects that are managed through git.
How to use Github to all the things that git does?
"You can spend your life being a Git Person and never ever go to the GIT website 
                                    or
"You can also spend all the time on the Github website and never actually run GIT 
 anywhere else."

"Learn git and the Git concepts through the Git Interface".
and later see how those concepts locally to your own computer.

A Github repository is another name of a project which can have multiple files associated with it.
=> Its a repository of files.
=>Git cant have spaces in between their names.
Go to New file and put the text.
commit => save
edit button = > edit
unique indentifier for commit:[commit hash]
commit 9702e07413d983fb6d70c66d9d1eeb029758ab6f

Branch:
create branch on this page.

Forking is done...


Branch 2:
Branch:See Image 1:
create branch on this page.
History:
Commit directly to the Transcript-git_branched branch
b8horpet has decided to make it own change.

See Image 2:
bring it back to master.
[Transcript-git_branched] 


=>pull request and a merge request.
=>pushing and pulling are important 
  terms in github.

=>pushing kind of being like sending something to somebody.

=> pulling being something from somebody.

=>In some ways they are almost  interchangeable.

[Transcript-git_branched] 
will you please,request is the key terms here:
will you please take my changes and pull them into master.

I am just making a request to myself.later you would see two different people.

button:
compare and pull request.

I want what I just did in [Transcript-git_branched]
to go back into the main branch.

A request to merge those changes in the [Transcript-git_branched]
back to the master branch.

Steps:

Compare changes:
base master <= compare:Transcript-git_branched

Open a pull request:

Write a caption:

Create a pull request.
Merge Pull Request.
Forking ....
